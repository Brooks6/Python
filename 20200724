#reading files
employee_file = open("employee.txt", "r") #r(read), w(write), a(append)
print(employee_file.readable()) #check if is it possible to read and the outcome is true
print(employee_file.readline()) #read first line and then move the cursor to next line
print(employee_file.readlines()) #read all the lines and then put them into a list
print(employee_file.readlines()[1])
employee_file.close()

#writing to files
employee_file = open("employee.txt", "a")#if use "w" instead of "a", this means this file will be overwritten
emplpyee_file.write("\nBrooks") #use "\n" to move cursor

#modules and pip
import useful_tools
print(usefull_tools.roll_dice(10)) #use dot operator to use member functions
'''
more vital modules in website:
http://docs.python.org/3/py-modindex.html
find lib folder in externallibraries
'''
'''
use pip to install third external modules
install command: pip install python-docx
uninstall command: pip uninstall python-docx
'''

#classes & objects
class Student: #in student.py
  def __init__(self, name, major, gpa, is_on_probation): #add certain attribute
    self.name = name #the name of the student object is gonna be equal to the name we passed in
    self.major = major #self is refer to actual object
    self.gpa = gpa
    self.is_on_probation = is_on_probation
    
from Student import Student #in app.py, from student file, we want to import student class
student1 = Student("Jim", "Business", 3.1, False) #calling def __init__ function
print(student1.gpa)

#building a multiple choice quiz
class Question: #in question.py
  def __init__(self, prompt, answer):
    self.prompt = prompt
    self.answer = answer

from Question import Question #in app.py
question_prompts = [
  "what color are apples?\n(a) red/green\n(b) purple\n(c) orange\n\n",
  "what color are Banans?\n(a) teal\n(b) magenta\n(c) yellow\n\n",
  "what color are strawberries?\n(a) yellow\n(b) red\n(c) blue\n\n"
]

questions = [
  question(question_prompts[0], "a"),
  question(question_prompts[1], "c")
  question(question_prompts[2], "b")
]

def run_test(questions):
  score = 0
  for question in questions: #for each question objects inside questions array we want to do sth.
    answer = input(question.prompt)
    if answer == question.answer:
      score += 1
  print("you got " + str(score) + "/" + str(len(questions))+ "correct")
  
run_test(questions)

#object functions
class Student: #in Student.py
  def __inti__(self, gpa):
    self.gpa = gpa
    
  def on_honnor_roll(self):
    if self.gpa >= 3.5:
      return True
    else
      return Flase

#inheritance
from Chef import Chef
class ChineseChef(Chef): #want to be able to use all the functions that inside Chef class
  def make_special_dish(self):
    print("the chef makes orange chicken")
  def make_fried_rice(self)
    print("the chef makes fried rice")
